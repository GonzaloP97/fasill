<div class="container py-2 px-0"><h4 id="tuning_best_substitution/2"><a href="/fasill/documentation/src/tuning#tuning_best_substitution/2">tuning_best_substitution/2</a></h4><?php echo show_template("tuning_best_substitution(?Substitution, ?Deviation)"); ?><p><?php echo show_description("This predicate succeeds when ?Substitution is the best substitution found so far and ?Deviation is the deviation with respect to the set of test cases."); ?></p></div>
<div class="container py-2 px-0"><h4 id="findall_symbolic_cons/1"><a href="/fasill/documentation/src/tuning#findall_symbolic_cons/1">findall_symbolic_cons/1</a></h4><?php echo show_template("findall_symbolic_cons(?Symbols)"); ?><p><?php echo show_description("This predicate succeeds when ?Symbols is the set of symbolic constants contained in the FASILL rules asserted in the current environment."); ?></p></div>
<div class="container py-2 px-0"><h4 id="findall_symbolic_cons/2"><a href="/fasill/documentation/src/tuning#findall_symbolic_cons/2">findall_symbolic_cons/2</a></h4><?php echo show_template("findall_symbolic_cons(+Expression, ?Symbols)"); ?><p><?php echo show_description("This predicate succeeds when ?Symbols is the set of symbolic constants contained in +Expression."); ?></p></div>
<div class="container py-2 px-0"><h4 id="symbolic_substitution/2"><a href="/fasill/documentation/src/tuning#symbolic_substitution/2">symbolic_substitution/2</a></h4><?php echo show_template("symbolic_substitution(+Symbols, -Substitution)"); ?><p><?php echo show_description("This predicate succeeds when +Symbols is a set of symbolic constants and -Substitution is a possible symbolic substitution for constants +Symbols. This predicate can be used for generating, by reevaluation, all possible symbolic substitutions for the constants."); ?></p></div>
<div class="container py-2 px-0"><h4 id="apply_symbolic_substitution/3"><a href="/fasill/documentation/src/tuning#apply_symbolic_substitution/3">apply_symbolic_substitution/3</a></h4><?php echo show_template("apply_symbolic_substitution(+ExpressionIn, +Substitution, -ExpressionOut)"); ?><p><?php echo show_description("This predicate succeeds when +ExpressionOut is the resulting expression after applying the symbolic substitution +Substitution to the expression +ExpressionIn."); ?></p></div>
<div class="container py-2 px-0"><h4 id="tuning_thresholded/2"><a href="/fasill/documentation/src/tuning#tuning_thresholded/2">tuning_thresholded/2</a></h4><?php echo show_template("tuning_thresholded(?Substitution, ?Deviation)"); ?><p><?php echo show_description("This predicate succeeds when ?Substitution is the best symbolic substitution for the set of test cases loaded into the current environment, with deviation ?Deviation."); ?></p></div>
<div class="container py-2 px-0"><h4 id="tuning_thresholded/3"><a href="/fasill/documentation/src/tuning#tuning_thresholded/3">tuning_thresholded/3</a></h4><?php echo show_template("tuning_thresholded(+Tests, +Substitution, ?Error)"); ?><p><?php echo show_description("This predicate succeeds when ?Substitution is the best symbolic substitution for the set of test cases loaded into the current environment, with deviation ?Deviation. +Tests is the set of test cases with goal partially executed."); ?></p></div>